(in-package :ethif)

;;; SOCK_xxx
(defconstant +SOCK_STREAM+ 1 "Sequenced, reliable, connection-based byte streams")
(defconstant +SOCK_DGRAM+ 2 "Connectionless, unreliable datagrams of fixed maximum length")
(defconstant +SOCK_RAW+ 3 "Raw protocol interface")
(defconstant +SOCK_RDM+ 4 "Reliably-delivered messages")
(defconstant +SOCK_SEQPACKET+ 5 "Sequenced, reliable, connection-based, datagrams of fixed maximum length")
(defconstant +SOCK_DCCP+ 6 "Datagram Congestion Control Protocol")
(defconstant +SOCK_PACKET+ 10 "Linux specific way of getting packets at the dev level. For writing rarp and other similar things on the user level")


;;; IFxxx
(defconstant +IFNAMSIZ+ 16)
(defconstant +IFHWADDRLE+ 6)


;;; Address families
(defconstant +AF_UNSPEC+ 0 "Unspecified")
(defconstant +AF_LOCAL+ 1 "Local to host (pipes and file-domain)")
(defconstant +AF_UNIX+ +AF_LOCAL+ "POSIX name for AF_LOCAL")
(defconstant +AF_FILE+ +AF_LOCAL+ "Another non-standard name for AF_LOCAL")
(defconstant +AF_INET+ 2 "IP protocol family")
(defconstant +AF_AX25+ 3 "Amateur Radio AX.25")
(defconstant +AF_IPX+ 4 "Novell Internet Protocol")
(defconstant +AF_APPLETALK+ 5 "Appletalk DDP")
(defconstant +AF_NETROM+ 6 "Amateur radio NetROM")
(defconstant +AF_BRIDGE+ 7 "Multiprotocol bridge")
(defconstant +AF_ATMPVC+ 8 "ATM PVCs")
(defconstant +AF_X25+ 9 "Reserved for X.25 project")
(defconstant +AF_INET6+ 10 "IP Version 6")
(defconstant +AF_ROSE+ 11 "Amateur Radio X.25 PLP")
(defconstant +AF_DECnet+ 12 "Reserved for DECnet project")
(defconstant +AF_NETBEUI+ 13 "Reserved for 802.2LLC project")
(defconstant +AF_SECURITY+ 14 "Security callback pseudo AF")
(defconstant +AF_KEY+ 15 "PF KEY key management API")
(defconstant +AF_NETLINK+ 16)
(defconstant +AF_ROUTE+ +AF_NETLINK+ "Alias to emulate 4.4BSD")
(defconstant +AF_PACKET+ 17 "acket family")
(defconstant +AF_ASH+ 18 "Ash")
(defconstant +AF_ECONET+ 19 "Acorn Econet")
(defconstant +AF_ATMSVC+ 20 "ATM SVCs")
(defconstant +AF_RDS+ 21 "RDS sockets")
(defconstant +AF_SNA+ 22 "Linux SNA Project")
(defconstant +AF_IRDA+ 23 "IRDA sockets")
(defconstant +AF_PPPOX+ 24 "PPPoX sockets")
(defconstant +AF_WANPIPE+ 25 "Wanpipe API sockets")
(defconstant +AF_LLC+ 26 "Linux LLC")
(defconstant +AF_CAN+ 29 "Controller Area Network")
(defconstant +AF_TIPC+ 30 "TIPC sockets")
(defconstant +AF_BLUETOOTH+ 31 "Bluetooth sockets")
(defconstant +AF_IUCV+ 32 "IUCV sockets")
(defconstant +AF_RXRPC+ 33 "RxRPC sockets")
(defconstant +AF_ISDN+ 34 "mISDN sockets")
(defconstant +AF_PHONET+ 35 "Phonet sockets")
(defconstant +AF_IEEE802154+ 36 "IEEE 802.16.4 sockets")
(defconstant +AF_MAX+ 47 "For now")


;;; SIOCxxx
(defconstant +SIOCINQ+ #x541B)
(defconstant +SIOCOUTQ+ #x5411)
(defconstant +SIOCADDRT+ #x890B "add routing table entry")
(defconstant +SIOCDELRT+ #x890C "delete routing table entry")
(defconstant +SIOCRTMSG+ #x890D	"call to routing system")
(defconstant +SIOCGIFNAME+ #x8910 "get iface name")
(defconstant +SIOCSIFLINK+ #x8911 "set iface channel")
(defconstant +SIOCGIFCONF+ #x8912 "get iface list")
(defconstant +SIOCGIFFLAGS+ #x8913 "get flags")
(defconstant +SIOCSIFFLAGS+ #x8914 "set flags")
(defconstant +SIOCGIFADDR+ #x8915 "get PA address")
(defconstant +SIOCSIFADDR+ #x8916 "set PA address")
(defconstant +SIOCGIFDSTADDR+ #x8917 "get remote PA address")
(defconstant +SIOCSIFDSTADDR+ #x8918 "set remote PA address")
(defconstant +SIOCGIFBRDADDR+ #x8919 "get broadcast PA address")
(defconstant +SIOCSIFBRDADDR+ #x891a "set broadcast PA address")
(defconstant +SIOCGIFNETMASK+ #x891b "get network PA mask")
(defconstant +SIOCSIFNETMASK+ #x891c "set network PA mask")
(defconstant +SIOCGIFMETRIC+ #x891d "get metric")
(defconstant +SIOCSIFMETRIC+ #x891e "set metric")
(defconstant +SIOCGIFMEM+ #x891f "get memory address (BSD)")
(defconstant +SIOCSIFMEM+ #x8920 "set memory address (BSD)")
(defconstant +SIOCGIFMTU+ #x8921 "get MTU size")
(defconstant +SIOCSIFMTU+ #x8922 "set MTU size")
(defconstant +SIOCSIFNAME+ #x8923 "set interface name")
(defconstant +SIOCSIFHWADDR+ #x8924 "set hardware address")
(defconstant +SIOCGIFENCAP+ #x8925 "get/set encapsulations")
(defconstant +SIOCSIFENCAP+ #x8926)
(defconstant +SIOCGIFHWADDR+ #x8927 "Get hardware address")
(defconstant +SIOCGIFSLAVE+ #x8929 "Driver slaving support")
(defconstant +SIOCSIFSLAVE+ #x8930)
(defconstant +SIOCADDMULTI+ #x8931 "Multicast address lists")
(defconstant +SIOCDELMULTI+ #x8932)
(defconstant +SIOCGIFINDEX+ #x8933 "name -> if_index mapping")
(defconstant +SIOGIFINDEX+ +SIOCGIFINDEX+ "misprint compatibility :-)")
(defconstant +SIOCSIFPFLAGS+ #x8934 "set/get extended flags set")
(defconstant +SIOCGIFPFLAGS+ #x8935)
(defconstant +SIOCDIFADDR+ #x8936 "delete PA address")
(defconstant +SIOCSIFHWBROADCAST+ #x8937 "set hardware broadcast addr")
(defconstant +SIOCGIFCOUNT+ #x8938 "get number of devices")
(defconstant +SIOCGIFBR+ #x8940 "Bridging support")
(defconstant +SIOCSIFBR+ #x8941 "Set bridging options")
(defconstant +SIOCGIFTXQLEN+ #x8942 "Get the tx queue length")
(defconstant +SIOCSIFTXQLEN+ #x8943 "Set the tx queue length")
(defconstant +SIOCGIFDIVERT+ #x8944 "Frame diversion support")
(defconstant +SIOCSIFDIVERT+ #x8945 "Set frame diversion options")
(defconstant +SIOCETHTOOL+ #x8946 "Ethtool interface")
(defconstant +SIOCGMIIPHY+ #x8947 "Get address of MII PHY in use")
(defconstant +SIOCGMIIREG+ #x8948 "Read MII PHY register")
(defconstant +SIOCSMIIREG+ #x8949 "Write MII PHY register")
(defconstant +SIOCWANDEV+  #x894A "get/set netdev parameters")
(defconstant +SIOCDARP+	#x8953 "delete ARP table entry")
(defconstant +SIOCGARP+	#x8954 "get ARP table entry")
(defconstant +SIOCSARP+	#x8955 "set ARP table entry")
(defconstant +SIOCDRARP+ #x8960 "delete RARP table entry")
(defconstant +SIOCGRARP+ #x8961 "get RARP table entry")
(defconstant +SIOCSRARP+ #x8962 "set RARP table entry")
(defconstant +SIOCGIFMAP+ #x8970 "Get device parameters")
(defconstant +SIOCSIFMAP+ #x8971 "Set device parameters")
(defconstant +SIOCADDDLCI+ #x8980 "Create new DLCI device")
(defconstant +SIOCDELDLCI+ #x8981 "Delete DLCI device")
(defconstant +SIOCGIFVLAN+ #x8982 "802.1Q VLAN support")
(defconstant +SIOCSIFVLAN+ #x8983 "Set 802.1Q VLAN options")
(defconstant +SIOCBONDENSLAVE+ #x8990 "enslave a device to the bond")
(defconstant +SIOCBONDRELEASE+ #x8991 "release a slave from the bond")
(defconstant +SIOCBONDSETHWADDR+ #x8992 "set the hw addr of the bond")
(defconstant +SIOCBONDSLAVEINFOQUERY+ #x8993 "rtn info about slave state")
(defconstant +SIOCBONDINFOQUERY+ #x8994 "rtn info about bond state")
(defconstant +SIOCBONDCHANGEACTIVE+ #x8995 "update to a new active slave")
(defconstant +SIOCBRADDBR+ #x89a0 "create new bridge device")
(defconstant +SIOCBRDELBR+ #x89a1 "remove bridge device")
(defconstant +SIOCBRADDIF+ #x89a2 "add interface to bridge")
(defconstant +SIOCBRDELIF+ #x89a3 "remove interface from bridge")
(defconstant +SIOCSHWTSTAMP+ #x89b0)
(defconstant +SIOCDEVPRIVATE+ #x89F0 "to 89FF")
(defconstant +SIOCPROTOPRIVATE+ #x89E0 "to 89EF")


;;; IFF_xxx
(defvar *iff-list*
  (list
   (defconstant +IFF_UP+ #x1 "Interface is up")
   (defconstant +IFF_BROADCAST+ #x2 "Broadcast address valid")
   (defconstant +IFF_DEBUG+ #x4 "Turn on debugging")
   (defconstant +IFF_LOOPBACK+ #x8 "Is a loopback net")
   (defconstant +IFF_POINTOPOINT+ #x10 "Interface is point-to-point link")
   (defconstant +IFF_NOTRAILERS+ #x20 "Avoid use of trailers")
   (defconstant +IFF_RUNNING+ #x40 "Resources allocated")
   (defconstant +IFF_NOARP+ #x80 "No address resolution protocol")
   (defconstant +IFF_PROMISC+ #x100 "Receive all packets")
   (defconstant +IFF_ALLMULTI+ #x200 "Receive all multicast packets")
   (defconstant +IFF_MASTER+ #x400 "Master of a load balancer")
   (defconstant +IFF_SLAVE+ #x800 "Slave of a load balancer")
   (defconstant +IFF_MULTICAST+ #x1000 "Supports multicast")
   (defconstant +IFF_PORTSEL+ #x2000 "Can set media type")
   (defconstant +IFF_AUTOMEDIA+ #x4000 "Auto media select active")
   (defconstant +IFF_DYNAMIC+ #x8000 "Dialup device with changing addresses")))
(defvar *iff-assoc-list*
  (mapcar 
   (lambda (f &aux (nm (symbol-name f)))
     (list f (symbol-value f) (intern (subseq nm 5 (1- (length nm))) :keyword)))
   *iff-list*))
(defun iff.key->int (kw)
  (second (find kw *iff-assoc-list* :key #'third)))


;;; ETH_P_xxx
(defconstant +ETH_P_DEFAULT+   #x0000)
(defconstant +ETH_P_LOOP+      #x0060 "Ethernet Loopback packet")
(defconstant +ETH_P_PUP+       #x0200 "Xerox PUP packet")
(defconstant +ETH_P_PUPAT+     #x0201 "Xerox PUP Addr Trans packet")
(defconstant +ETH_P_IP+        #x0800 "Internet Protocol packet")
(defconstant +ETH_P_X25+       #x0805 "CCITT X.25")
(defconstant +ETH_P_ARP+       #x0806 "Address Resolution packet")
(defconstant +ETH_P_BPQ+       #x08FF "G8BPQ AX.25 Ethernet Packet [ NOT AN OFFICIALLY REGISTERED ID ]")
(defconstant +ETH_P_IEEEPUP+   #x0a00 "Xerox IEEE802.3 PUP packet ")
(defconstant +ETH_P_IEEEPUPAT+ #x0a01 "Xerox IEEE802.3 PUP Addr Trans packet")
(defconstant +ETH_P_DEC+       #x6000 "DEC Assigned proto")
(defconstant +ETH_P_DNA_DL+    #x6001 "DEC DNA Dump/Load")
(defconstant +ETH_P_DNA_RC+    #x6002 "DEC DNA Remote Console")
(defconstant +ETH_P_DNA_RT+    #x6003 "DEC DNA Routing")
(defconstant +ETH_P_LAT+       #x6004 "DEC LAT")
(defconstant +ETH_P_DIAG+      #x6005 "DEC Diagnostics")
(defconstant +ETH_P_CUST+      #x6006 "DEC Customer use")
(defconstant +ETH_P_SCA+       #x6007 "DEC Systems Comms Arch")
(defconstant +ETH_P_TEB+       #x6558 "Trans Ether Bridging")
(defconstant +ETH_P_RARP+      #x8035 "Reverse Addr Res packet")
(defconstant +ETH_P_ATALK+     #x809B "Appletalk DDP")
(defconstant +ETH_P_AARP+      #x80F3 "Appletalk AARP")
(defconstant +ETH_P_8021Q+     #x8100 "802.1Q VLAN Extended Header")
(defconstant +ETH_P_IPX+       #x8137 "IPX over DIX")
(defconstant +ETH_P_IPV6+      #x86DD "IPv6 over bluebook")
(defconstant +ETH_P_PAUSE+     #x8808 "IEEE Pause frames. See 802.3 31B")
(defconstant +ETH_P_SLOW+      #x8809 "Slow Protocol. See 802.3ad 43B")
(defconstant +ETH_P_WCCP+      #x883E "Web-cache coordination protocol")
(defconstant +ETH_P_PPP_DISC+  #x8863 "PPPoE discovery messages")
(defconstant +ETH_P_PPP_SES+   #x8864 "PPPoE session messages")
(defconstant +ETH_P_MPLS_UC+   #x8847 "MPLS Unicast traffic")
(defconstant +ETH_P_MPLS_MC+   #x8848 "MPLS Multicast traffic")
(defconstant +ETH_P_ATMMPOA+   #x884c "MultiProtocol Over ATM")
(defconstant +ETH_P_ATMFATE+   #x8884 "Frame-based ATM Transport")
(defconstant +ETH_P_PAE+       #x888E "Port Access Entity (IEEE 802.1X)")
(defconstant +ETH_P_AOE+       #x88A2 "ATA over Ethernet")
(defconstant +ETH_P_TIPC+      #x88CA "TIPC")
(defconstant +ETH_P_1588+      #x88F7 "IEEE 1588 Timesync")
(defconstant +ETH_P_FCOE+      #x8906 "Fibre Channel over Ethernet")
(defconstant +ETH_P_FIP+       #x8914 "FCoE Initialization Protocol")
(defconstant +ETH_P_EDSA+      #xDADA "Ethertype DSA [ NOT AN OFFICIALLY REGISTERED ID ]")
(defconstant +ETH_P_802_3+     #x0001 "Dummy type for 802.3 frames")
(defconstant +ETH_P_AX25+      #x0002 "Dummy protocol id for AX.25")
(defconstant +ETH_P_ALL+       #x0003 "Every packet (be careful!!!)")
(defconstant +ETH_P_802_2+     #x0004 "802.2 frames")
(defconstant +ETH_P_SNAP+      #x0005 "Internal only")
(defconstant +ETH_P_DDCMP+     #x0006 "DEC DDCMP: Internal only")
(defconstant +ETH_P_WAN_PPP+   #x0007 "Dummy type for WAN PPP frames")
(defconstant +ETH_P_PPP_MP+    #x0008 "Dummy type for PPP MP frames")
(defconstant +ETH_P_LOCALTALK+ #x0009 "Localtalk pseudo type")
(defconstant +ETH_P_CAN+       #x000C "Controller Area Network")
(defconstant +ETH_P_PPPTALK+   #x0010 "Dummy type for Atalk over PPP")
(defconstant +ETH_P_TR_802_2+  #x0011 "802.2 frames")
(defconstant +ETH_P_MOBITEX+   #x0015 "Mobitex (kaz@cafe.net)")
(defconstant +ETH_P_CONTROL+   #x0016 "Card specific control frames")
(defconstant +ETH_P_IRDA+      #x0017 "Linux-IrDA")
(defconstant +ETH_P_ECONET+    #x0018 "Acorn Econet")
(defconstant +ETH_P_HDLC+      #x0019 "HDLC frames")
(defconstant +ETH_P_ARCNET+    #x001A "1A for ArcNet :-)")
(defconstant +ETH_P_DSA+       #x001B "Distributed Switch Arch.")
(defconstant +ETH_P_TRAILER+   #x001C "Trailer switch tagging")
(defconstant +ETH_P_PHONET+    #x00F5 "Nokia Phonet frames")
(defconstant +ETH_P_IEEE802154+ #x00F6 "IEEE802.15.4 frame")


;;; ATF_xxx
(defconstant +ATF_COM+ #x02 "completed entry (ha valid)")
(defconstant +ATF_PERM+ #x04 "permanent entry")
(defconstant +ATF_PUBL+ #x08 "publish entry")
(defconstant +ATF_USETRAILERS+ #x10 "has requested trailers")
(defconstant +ATF_NETMASK+ #x20 "want to use a netmask (only")
(defconstant +ATF_DONTPUB+ #x40 "don't answer this addresses")
(defconstant +ATF_MAGIC+ #x80 "Automatically added entry")


;;; ARPHRD_xxx
(defconstant +ARPHRD_NETROM+ 0 "From KA9Q: NET/ROM pseudo")
(defconstant +ARPHRD_ETHER+ 1 "Ethernet 10/100Mbps")
(defconstant +ARPHRD_EETHER+ 2 "Experimental Ethernet")
(defconstant +ARPHRD_AX25+ 3 "AX.25 Level 2")
(defconstant +ARPHRD_PRONET+ 4 "PROnet token ring")
(defconstant +ARPHRD_CHAOS+ 5 "Chaosnet")
(defconstant +ARPHRD_IEEE802+ 6 "IEEE 802.2 Ethernet/TR/TB")
(defconstant +ARPHRD_ARCNET+ 7 "ARCnet")
(defconstant +ARPHRD_APPLETLK+ 8 "APPLEtalk")
(defconstant +ARPHRD_DLCI+ 15 "Frame Relay DLCI")
(defconstant +ARPHRD_ATM+ 19 "ATM")
(defconstant +ARPHRD_METRICOM+ 23 "Metricom STRIP (new IANA id)")
(defconstant +ARPHRD_IEEE1394+ 24 "IEEE 1394 IPv4 - RFC 2734")
(defconstant +ARPHRD_EUI64+ 27 "EUI-64")
(defconstant +ARPHRD_INFINIBAND+ 32 "InfiniBand")
(defconstant +ARPHRD_SLIP+ 256)
(defconstant +ARPHRD_CSLIP+ 257)
(defconstant +ARPHRD_SLIP6+ 258)
(defconstant +ARPHRD_CSLIP6+ 259)
(defconstant +ARPHRD_RSRVD+ 260 "Notional KISS type")
(defconstant +ARPHRD_ADAPT+ 264)
(defconstant +ARPHRD_ROSE+ 270)
(defconstant +ARPHRD_X25+ 271 "CCITT X.25")
(defconstant +ARPHRD_HWX25+ 272 "Boards with X.25 in firmware")
(defconstant +ARPHRD_PPP+ 512)
(defconstant +ARPHRD_CISCO+ 513 "Cisco HDLC")
(defconstant +ARPHRD_HDLC+ +ARPHRD_CISCO+)
(defconstant +ARPHRD_LAPB+ 516 "LAPB")
(defconstant +ARPHRD_DDCMP+ 517 "Digital's DDCMP")
(defconstant +ARPHRD_RAWHDLC+ 518 "Raw HDLC")
(defconstant +ARPHRD_TUNNEL+ 768 "IPIP tunnel")
(defconstant +ARPHRD_TUNNEL6+ 769 "IPIP6 tunnel")
(defconstant +ARPHRD_FRAD+ 770 "Frame Relay Access Device")
(defconstant +ARPHRD_SKIP+ 771 "SKIP vif")
(defconstant +ARPHRD_LOOPBACK+ 772 "Loopback device")
(defconstant +ARPHRD_LOCALTLK+ 773 "Localtalk device")
(defconstant +ARPHRD_FDDI+ 774 "Fiber Distributed Data Interface")
(defconstant +ARPHRD_BIF+ 775 "AP1000 BIF")
(defconstant +ARPHRD_SIT+ 776 "sit0 device - IPv6-in-IPv4")
(defconstant +ARPHRD_IPDDP+ 777 "IP-in-DDP tunnel")
(defconstant +ARPHRD_IPGRE+ 778 "GRE over IP")
(defconstant +ARPHRD_PIMREG+ 779 "PIMSM register interface")
(defconstant +ARPHRD_HIPPI+ 780 "High Performance Parallel I'face")
(defconstant +ARPHRD_ASH+ 781 "(Nexus Electronics) Ash")
(defconstant +ARPHRD_ECONET+ 782 "Acorn Econet")
(defconstant +ARPHRD_IRDA+ 783 "Linux-IrDA")
(defconstant +ARPHRD_FCPP+ 784 "Point to point fibrechanel")
(defconstant +ARPHRD_FCAL+ 785 "Fibrechanel arbitrated loop")
(defconstant +ARPHRD_FCPL+ 786 "Fibrechanel public loop")
(defconstant +ARPHRD_FCFABRIC+ 787 "Fibrechanel fabric")
(defconstant +ARPHRD_IEEE802_TR+ 800 "Magic type ident for TR")
(defconstant +ARPHRD_IEEE80211+ 801 "IEEE 802.11")
(defconstant +ARPHRD_IEEE80211_PRISM+ 802 "IEEE 802.11 + Prism2 header")
(defconstant +ARPHRD_IEEE80211_RADIOTAP+ 803 "IEEE 802.11 + radiotap header")
(defconstant +ARPHRD_IEEE802154+ 804 "IEEE 802.15.4 header")
(defconstant +ARPHRD_IEEE802154_PHY+ 805 "IEEE 802.15.4 PHY header")
(defconstant +ARPHRD_VOID+   #xFFFF "Void type, nothing is known")
(defconstant +ARPHRD_NONE+   #xFFFE "Zero header length")
